# 8.5 Problem Set - Exercise 4.6

1. Describe in English what the following code segments do:

	```java
	// For each loop, a variable *expo*, starting at one and less than a predefined limit, increments by one.
	// The program then prints *expo*, followed by a space, followed by 2^*expo*.
	for (int expo = 1; expo <= limit; expo++) {
		System.out.println(expo + " " + Math.pow(2, expo));
	}
	```
	
	```java
	// For each loop, a varaible *count* is equal to *expo* minus 1, but *count* must be greater than one in order to be run.
	// The varaible *base*, starting with two, gets updated as it gets multiplied by itself.
	int base = 2;
	for (int count = expo; count > 1; count--) {
		base = base * base;
	}
	```

2. Write code segments that use for loops to perform the following tasks:

	a. Print the squares and cubes of the first 10 positive integers.
	
	```java
	for (int i = 1; i <= 10; i++) {
		System.out.println(i + "^2 = " + Math.pow(i));
		System.out.println(i + "^3 = " + Math.pow(i));
	}
	```
	This code outputs:
	
	```code
	1^2 = 1.0
	1^3 = 1.0
	2^2 = 4.0
	2^3 = 8.0
	3^2 = 9.0
	3^3 = 27.0
	4^2 = 16.0
	4^3 = 64.0
	5^2 = 25.0
	5^3 = 125.0
	6^2 = 36.0
	6^3 = 216.0
	7^2 = 49.0
	7^3 = 343.0
	8^2 = 64.0
	8^3 = 512.0
	9^2 = 81.0
	9^3 = 729.0
	10^2 = 100.0
	10^3 = 1000.0
	```

	b. Build a string consisting of the first 10 positive digits in descending order.
	
	```java
	for (int i = 10; i > 0; i--) {
		System.out.print(i + " ");
	}
	```
	
3. Translate the following for loops to equivalent while loops:

 a. Original for loop:
 
	```java
	Scanner reader new Scanner(System.in);
	for (int i = 1; i <= 5; i++) {
		System.out.print("Enter an integer: ");
		int number = reader.nextInt();
		System.out.println(Math.pow(number, 2));
	}
	```
	
	Equivalent while loop:
	
	```java
	int i = 1;
	while( i <= 5 ) {
		System.out.print("Enter an integer: ");
		int number = reader.nextInt();
		System.out.println(Math.pow(number, 2));
		i++;
	}
	```
	
 b. Original for loop:
 
	```java
	int base = 2;
	for (int count = expo; count > 1; count--)
		base = base * base;
	```
	
	Equivalent while loop:
	
	```java
	int base = 2;
	while( expo > 1 ) {
		base = base * base;
		expo--;
	}
	```
